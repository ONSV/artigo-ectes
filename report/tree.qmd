---
title: Árvore de decisão

format: 
  html: 
    toc: true
    toc-depth: 2
    theme: style.scss  
        
title-block-banner: true
---

```{r}
library(tidyverse)
library(tidymodels)
library(here)
library(knitr)
library(rpart.plot)
load(here("data","sim.rda"))
options(scipen = 999)
```

```{r}
sim_tratado <- sim |> 
  mutate(
    IDADE = if_else(
      grepl("anos", IDADE),
      str_sub(IDADE,1,3),
      "0"
    ),
    IDADE = as.numeric(IDADE),
    ESC_DECOD = factor(
      ESC_DECOD,
      levels = c("nenhuma","1 a 3 anos","4 a 7 anos","8 a 11 anos","12 a mais")
    )
  ) |> 
  drop_na() |> 
  select(IDADE, RACACOR, SEXO, ESTCIV, LOCOCOR, ESC_DECOD, MOTOCICLISTA) |> 
  rename(idade = IDADE,
         cor = RACACOR,
         sexo = SEXO,
         estado_civil = ESTCIV,
         local_obito = LOCOCOR,
         escolaridade = ESC_DECOD,
         motociclista = MOTOCICLISTA) |> 
  mutate(across(c(cor, sexo, estado_civil, local_obito, motociclista), 
                as_factor))

sim_tratado |> head() |> kable()
```

```{r}
set.seed(123)

data_split <- initial_split(sim_tratado, prop = 0.8)

train_split <- training(data_split)
test_split <- testing(data_split)

nrow(train_split)
nrow(test_split)
```

```{r}
prep_steps <- 
  recipe(motociclista ~ ., train_split) |>
  step_dummy(all_nominal_predictors())

prep_steps
```

```{r}
tree_spec <-
  decision_tree(cost_complexity = 0, tree_depth = 7) |> 
  set_engine("rpart") |> 
  set_mode("classification")

tree_wflow <- 
  workflow() |> 
  add_recipe(prep_steps) |> 
  add_model(tree_spec)

tree_fit <- tree_wflow |> 
  fit(train_split)

pred <- tree_fit |> 
  predict(test_split) |> 
  bind_cols(test_split)

pred

accuracy(pred, truth = motociclista, estimate = .pred_class)

tree_fit$fit$fit$fit |> prp()
```

```{r}
prep_steps |> prep() |> juice()
```

